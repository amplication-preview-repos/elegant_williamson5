/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WebScan as PrismaWebScan } from "@prisma/client";
import { WebScanCreateInput } from "./WebScanCreateInput";

export class WebScanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.WebScanCountArgs, "select">): Promise<number> {
    return this.prisma.webScan.count(args);
  }

  async webScans(args: Prisma.WebScanFindManyArgs): Promise<PrismaWebScan[]> {
    return this.prisma.webScan.findMany(args);
  }
  async webScan(
    args: Prisma.WebScanFindUniqueArgs
  ): Promise<PrismaWebScan | null> {
    return this.prisma.webScan.findUnique(args);
  }
  async createWebScan(args: Prisma.WebScanCreateArgs): Promise<PrismaWebScan> {
    return this.prisma.webScan.create(args);
  }
  async updateWebScan(args: Prisma.WebScanUpdateArgs): Promise<PrismaWebScan> {
    return this.prisma.webScan.update(args);
  }
  async deleteWebScan(args: Prisma.WebScanDeleteArgs): Promise<PrismaWebScan> {
    return this.prisma.webScan.delete(args);
  }
  async ScanWebApplication(args: WebScanCreateInput): Promise<string> {
    throw new Error("Not implemented");
  }
}
